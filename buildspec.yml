version: 0.2
phases:
    install:
        runtime-versions:
            nodejs: 14
        commands:
        - apt-get upgrade install -y
        - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
        - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl
        - chmod +x ./kubectl ./aws-iam-authenticator
        - export PATH=$PWD/:$PATH
        - kubectl version
    pre_build:
        commands:
        - echo Logging in to Amazon ECR...
        - aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 555516925462.dkr.ecr.us-west-1.amazonaws.com
        - REPOSITORY_URI=555516925462.dkr.ecr.us-west-1.amazonaws.com/nodejsapp
        - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
        - export KUBECONFIG=$HOME/.kube/config
        - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
    build:
        commands:
        - echo Build started on `date`
        - echo Building the Docker image...
        - docker build -t $REPOSITORY_URI:latest .
        - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG   
    post_build:
        commands:
        - echo Pushing the Docker images...
        - docker push $REPOSITORY_URI:latest
        - echo Writing image definitions file...
        - printf '[{"name":"cicd-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG
        - echo Push the latest image to cluster...
        - kubectl apply -f service.yaml
        - kubectl apply -f deployment.yaml
artifacts:
    files:
        - '**/*'